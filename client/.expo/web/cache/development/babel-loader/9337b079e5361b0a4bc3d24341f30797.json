{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\github\\\\whos-round\\\\client\\\\screens\\\\HomeScreen.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SVGImage } from \"react-native-web/dist/index\";\nimport io from 'socket.io-client';\nimport FriendListScreen from \"./FriendListScreen\";\nimport * as SVG from 'react-native-svg';\nvar Svg = SVG.Svg,\n    Path = SVG.Path,\n    G = SVG.G,\n    Rect = SVG.Rect;\n\nvar beerImage = require(\"../assets/beer.svg\");\n\nexport default function HomeScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      recMessages = _useState2[0],\n      setRecMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasJoined = _useState4[0],\n      setHasJoined = _useState4[1];\n\n  var socket = useRef(null);\n  useEffect(function () {\n    socket.current = io('http://localhost:3001');\n    socket.current.on('message', function (message) {\n      setRecMessages(function (prevState) {\n        return [message].concat(_toConsumableArray(prevState));\n      });\n    });\n  }, []);\n\n  var onSend = function onSend(messages) {\n    console.log('messages in onSend: ', messages);\n    socket.current.emit('message', messages[0].text);\n    setRecMessages(function (prevState) {\n      return [messages[0]].concat(_toConsumableArray(prevState));\n    });\n  };\n\n  var enterPub = function enterPub(userName, userDrink) {\n    socket.current.emit('join', userName, userDrink);\n    setHasJoined(true);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.headerTextContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Who's Round\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return alert(\"Finished Drink!!\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Svg, {\n    showWebviewLoader: false,\n    style: styles.beerImage,\n    source: beerImage,\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Press Beer Icon when finished Drink\")), React.createElement(View, {\n    style: styles.participantsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.participantsHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Participants\"), React.createElement(FriendListScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'beige',\n    flex: 1\n  },\n  headerTextContainer: {\n    backgroundColor: 'black',\n    marginVertical: 20\n  },\n  headerText: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginVertical: 20,\n    marginHorizontal: 20,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  beerImage: {\n    flex: 1,\n    width: 300,\n    height: 300\n  },\n  buttonText: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10,\n    textAlign: 'center'\n  },\n  participantsContainer: {\n    alignSelf: 'stretch',\n    marginTop: 40,\n    backgroundColor: '#fad369',\n    borderRadius: 20\n  },\n  participantsHeader: {\n    textAlign: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n    fontWeight: 'bold',\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/danie/github/whos-round/client/screens/HomeScreen.js"],"names":["React","useEffect","useState","useRef","SVGImage","io","FriendListScreen","SVG","Svg","Path","G","Rect","beerImage","require","HomeScreen","recMessages","setRecMessages","hasJoined","setHasJoined","socket","current","on","message","prevState","onSend","messages","console","log","emit","text","enterPub","userName","userDrink","styles","container","alignItems","margin","headerTextContainer","headerText","alert","buttonText","participantsContainer","participantsHeader","StyleSheet","create","backgroundColor","flex","marginVertical","fontSize","textAlign","marginHorizontal","color","fontWeight","width","height","textShadowColor","textShadowOffset","textShadowRadius","alignSelf","marginTop","borderRadius","marginBottom"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\nimport { View, Text, Platform, KeyboardAvoidingView, Image, StyleSheet, TouchableOpacity, SVGImage } from 'react-native';\nimport io from 'socket.io-client';\nimport FriendListScreen from './FriendListScreen';\nimport * as SVG from 'react-native-svg';\nconst { Svg, Path, G, Rect} = SVG\nconst beerImage = require('../assets/beer.svg');\n\nexport default function HomeScreen() {\n  const [recMessages, setRecMessages] = useState([]);\n  const [hasJoined, setHasJoined] = useState(false);\n  const socket = useRef(null);\n\n  useEffect(() => {\n    socket.current = io('http://localhost:3001'); // ip may need to be updated 10.10.22.159\n    socket.current.on('message', message => {\n      setRecMessages(prevState => [message, ...prevState]);\n    });\n  },[])\n\n  const onSend = (messages) => {\n    console.log('messages in onSend: ', messages);\n    socket.current.emit('message', messages[0].text);\n    setRecMessages(prevState => [messages[0], ...prevState]);\n  };\n\n  const enterPub = (userName, userDrink) => {\n    socket.current.emit('join', userName, userDrink);\n    setHasJoined(true);\n  }\n\n  return (\n    <View style={styles.container} >\n      <View style={{alignItems: 'center', margin: 20}}>\n        <View style={styles.headerTextContainer}>\n          <Text style={styles.headerText}>Who's Round</Text>\n        </View>\n        <TouchableOpacity onPress={() => alert(\"Finished Drink!!\")}>\n          <Svg showWebviewLoader={false} style={styles.beerImage} source={beerImage} resizeMode='contain' />\n          <Text style={styles.buttonText}>Press Beer Icon when finished Drink</Text>\n        </TouchableOpacity>\n        <View style={styles.participantsContainer}>\n          <Text style={styles.participantsHeader}>Participants</Text>\n          <FriendListScreen />\n        </View>\n      </View>\n      {/* {\n        Platform.OS === \"android\" && <KeyboardAvoidingView behavior=\"padding\" />\n      } */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n     backgroundColor: 'beige',\n     flex: 1\n  },\n  headerTextContainer: {\n    backgroundColor: 'black',\n    marginVertical: 20\n  },\n  headerText: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginVertical: 20,\n    marginHorizontal: 20,\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  beerImage: {\n    flex: 1,\n    width: 300,\n    height: 300\n  },\n  buttonText: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {width: -1, height: 1},\n    textShadowRadius: 10,\n    textAlign: 'center'\n  },\n  participantsContainer: {\n    alignSelf: 'stretch',\n    marginTop: 40,\n    backgroundColor: '#fad369',\n    borderRadius: 20,\n  },\n  participantsHeader: {\n    textAlign: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n    fontWeight: 'bold',\n    fontSize: 30,\n  }\n})"]},"metadata":{},"sourceType":"module"}