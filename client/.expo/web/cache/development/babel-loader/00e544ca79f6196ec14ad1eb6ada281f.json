{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\github\\\\whos-round\\\\client\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSocketIoMiddleware from 'redux-socket.io';\nimport io from 'socket.io-client';\nimport React from 'react';\nimport AppContainer from \"./AppContainer\";\nimport { useFonts, Montserrat } from '@expo-google-fonts/inter';\nvar socket = io('http://localhost:3001');\nvar socketIoMiddleware = createSocketIoMiddleware(socket, 'server/');\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'message':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        message: action.data\n      });\n\n    case 'users_online':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        usersOnline: action.data\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar store = applyMiddleware(socketIoMiddleware)(createStore)(reducer);\nstore.subscribe(function () {\n  console.log('new state', store.getState());\n});\nstore.dispatch({\n  type: 'server/hello',\n  data: 'Hello!'\n});\nexport default function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(AppContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/danie/github/whos-round/client/App.js"],"names":["createStore","applyMiddleware","Provider","createSocketIoMiddleware","io","React","AppContainer","useFonts","Montserrat","socket","socketIoMiddleware","reducer","state","action","type","message","data","usersOnline","store","subscribe","console","log","getState","dispatch","App"],"mappings":";;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,wBAAP,MAAqC,iBAArC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,0BAArC;AACA,IAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAD,CAAjB;AACA,IAAMM,kBAAkB,GAAGP,wBAAwB,CAACM,MAAD,EAAS,SAAT,CAAnD;;AAEA,SAASE,OAAT,GAAqC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACnC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,SAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAAnC;;AACF,SAAK,cAAL;AACE,6CAAYJ,KAAZ;AAAmBK,QAAAA,WAAW,EAAEJ,MAAM,CAACG;AAAvC;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD;;AAED,IAAMM,KAAK,GAAGjB,eAAe,CAACS,kBAAD,CAAf,CAAoCV,WAApC,EAAiDW,OAAjD,CAAd;AAEAO,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,KAAK,CAACI,QAAN,EAAzB;AACD,CAFD;AAIAJ,KAAK,CAACK,QAAN,CAAe;AAAET,EAAAA,IAAI,EAAE,cAAR;AAAwBE,EAAAA,IAAI,EAAE;AAA9B,CAAf;AAEA,eAAe,SAASQ,GAAT,GAAe;AAE5B,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSocketIoMiddleware from 'redux-socket.io';\nimport io from 'socket.io-client';\nimport React from 'react';\nimport AppContainer from './AppContainer';\nimport { useFonts, Montserrat } from '@expo-google-fonts/inter';\nconst socket = io('http://localhost:3001')//may need to change\nconst socketIoMiddleware = createSocketIoMiddleware(socket, 'server/');\n\nfunction reducer(state = {}, action) {\n  switch(action.type) {\n    case 'message':\n      return { ...state, message: action.data };\n    case 'users_online':\n      return { ...state, usersOnline: action.data }\n    default:\n      return state;\n  }\n}\n\nconst store = applyMiddleware(socketIoMiddleware)(createStore)(reducer);\n\nstore.subscribe(() => {\n  console.log('new state', store.getState());\n})\n\nstore.dispatch({ type: 'server/hello', data: 'Hello!' });\n\nexport default function App() {\n\n  return (\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}