{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\danie\\\\github\\\\whos-round\\\\client\\\\screens\\\\HomeScreen.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport io from 'socket.io-client';\nimport FriendListScreen from \"./FriendListScreen\";\n\nvar beerImage = require(\"../assets/beer.png\");\n\nexport default function HomeScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      recMessages = _useState2[0],\n      setRecMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasJoined = _useState4[0],\n      setHasJoined = _useState4[1];\n\n  var socket = useRef(null);\n  useEffect(function () {\n    socket.current = io('http://localhost:3001');\n    socket.current.on('finished', function (drinkState) {\n      setRecMessages(drinkState);\n    });\n  }, []);\n  var dispatch = useDispatch();\n\n  var onSend = function onSend(messages) {\n    console.log('messages in onSend: ', messages);\n    socket.current.emit('message', messages[0].text);\n    setRecMessages(function (prevState) {\n      return [messages[0]].concat(_toConsumableArray(prevState));\n    });\n  };\n\n  var enterPub = function enterPub(userName, userDrink) {\n    socket.current.emit('join', userName, userDrink);\n    setHasJoined(true);\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.headerTextContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Who's Round\")), React.createElement(TouchableOpacity, {\n    style: styles.beerImageContainer,\n    onPress: function onPress() {\n      return dispatch({\n        type: 'server/finished',\n        inputName: userName,\n        inputDrink: userDrink\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: styles.beerImage,\n    source: beerImage,\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Press Beer Icon when finished Drink\")), React.createElement(View, {\n    style: styles.participantsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.participantsHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Participants\"), React.createElement(FriendListScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }))), Platform.OS === \"android\" && React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 40\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'beige',\n    flex: 1\n  },\n  headerTextContainer: {\n    backgroundColor: 'black',\n    marginVertical: 10\n  },\n  headerText: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginVertical: 10,\n    marginHorizontal: 10,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  beerImageContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  beerImage: {\n    flex: 1,\n    width: 150,\n    height: 150\n  },\n  buttonText: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10,\n    textAlign: 'center'\n  },\n  participantsContainer: {\n    alignSelf: 'stretch',\n    marginTop: 20,\n    backgroundColor: '#fad369',\n    borderRadius: 20\n  },\n  participantsHeader: {\n    textAlign: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/danie/github/whos-round/client/screens/HomeScreen.js"],"names":["React","useEffect","useState","useRef","useDispatch","io","FriendListScreen","beerImage","require","HomeScreen","recMessages","setRecMessages","hasJoined","setHasJoined","socket","current","on","drinkState","dispatch","onSend","messages","console","log","emit","text","prevState","enterPub","userName","userDrink","styles","container","alignItems","margin","headerTextContainer","headerText","beerImageContainer","type","inputName","inputDrink","buttonText","participantsContainer","participantsHeader","Platform","OS","StyleSheet","create","backgroundColor","flex","marginVertical","fontSize","textAlign","marginHorizontal","color","fontWeight","justifyContent","width","height","textShadowColor","textShadowOffset","textShadowRadius","alignSelf","marginTop","borderRadius","marginBottom"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { View, Text, Platform, KeyboardAvoidingView, Image, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\nimport io from 'socket.io-client';\nimport FriendListScreen from './FriendListScreen';\n\nconst beerImage = require('../assets/beer.png');\n\nexport default function HomeScreen() {\n  const [recMessages, setRecMessages] = useState([]);\n  const [hasJoined, setHasJoined] = useState(false);\n  const socket = useRef(null);\n\n  useEffect(() => {\n    socket.current = io('http://localhost:3001'); // ip may need to be updated 10.10.22.159\n    socket.current.on('finished', drinkState => {\n      setRecMessages(drinkState);\n    });\n  },[])\n\n  const dispatch = useDispatch();\n\n\n  // OBSOLETE //\n  const onSend = (messages) => {\n    console.log('messages in onSend: ', messages);\n    socket.current.emit('message', messages[0].text);\n    setRecMessages(prevState => [messages[0], ...prevState]);\n  };\n\n  const enterPub = (userName, userDrink) => {\n    socket.current.emit('join', userName, userDrink);\n    setHasJoined(true);\n  }\n  /////////////////\n\n  return (\n    <ScrollView>\n      <View style={styles.container} >\n        <View style={{alignItems: 'center', margin: 10}}>\n          <View style={styles.headerTextContainer}>\n            <Text style={styles.headerText}>Who's Round</Text>\n          </View>\n          <TouchableOpacity style={styles.beerImageContainer} onPress={() => dispatch({type: 'server/finished', inputName: userName, inputDrink: userDrink})}>\n            <Image style={styles.beerImage} source={beerImage} resizeMode='contain' />\n            <Text style={styles.buttonText}>Press Beer Icon when finished Drink</Text>\n          </TouchableOpacity>\n          <View style={styles.participantsContainer}>\n            <Text style={styles.participantsHeader}>Participants</Text>\n            <FriendListScreen />\n          </View>\n        </View>\n        {\n          Platform.OS === \"android\" && <KeyboardAvoidingView behavior=\"padding\" />\n        }\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n     backgroundColor: 'beige',\n     flex: 1\n  },\n  headerTextContainer: {\n    backgroundColor: 'black',\n    marginVertical: 10\n  },\n  headerText: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginVertical: 10,\n    marginHorizontal: 10,\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  beerImageContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  beerImage: {\n    flex: 1,\n    width: 150,\n    height: 150\n  },\n  buttonText: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {width: -1, height: 1},\n    textShadowRadius: 10,\n    textAlign: 'center'\n  },\n  participantsContainer: {\n    alignSelf: 'stretch',\n    marginTop: 20,\n    backgroundColor: '#fad369',\n    borderRadius: 20,\n  },\n  participantsHeader: {\n    textAlign: 'center',\n    marginTop: 10,\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 15,\n  }\n})"]},"metadata":{},"sourceType":"module"}